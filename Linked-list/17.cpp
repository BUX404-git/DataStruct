/**
 * 设计一个算法用于判断带头结点的循环双链表是否对称
 * 
 * 思路:让p从左向右扫描,直到他们指向同一结点(p==q,当循环双链表中结点个数为奇数时)
 * 或相邻(p->next=q或q->prior=p,当循环双链表个数为偶数时)为止,
 * 若他们所指的结点值相同,则继续进行下去否则返回0.若比较全部相等则返回1
 * 
 * */

int Sysmmetry(DLinklist L){
	//本算法从两头扫描循环双链表,以判断是否对称
	DNode *p=L->next,*q=L->prior;//两头工作指针
	while(p != q && q->next != p)//链表为偶数时,当循环到q等于p时结束或链表为奇数时,当循环到q的下一个节点等于p时,循环结束
		if(p->data == q->data){//所指的结点值相同则继续比较
			p=p->next;
			q=q->prior
		}
		else//当有一个不对称时,循环结束
			return 0;
	return 1;
}